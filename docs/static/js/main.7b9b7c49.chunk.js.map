{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAuB9C,OAEI,sBAAMC,SAjBW,SAAEC,GAEnBC,QAAQC,IAAIL,GAEZG,EAAEG,iBAEGN,EAAWO,OAAOC,OAAS,IAC5BV,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACxCR,EAAc,MASlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAzBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,a,uBCPfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCEXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,uBAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAASC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLF,SAAS,EACTb,KAAMkB,SAGhB,CAAEzB,IAEEqB,EDd0BK,CAAc1B,GAAvCoB,EAF+B,EAE/BA,QAAcP,EAFiB,EAEtBN,KAGjB,OACI,qCACA,oBAAIS,UAAU,iCAAd,SAAiDhB,IAE/CoB,GAAW,mBAAGJ,UAAU,iBAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CACIE,MAAQF,EAAIE,MACZV,IAAMQ,EAAIR,KACLQ,EAAIC,aElBpBgB,EAAe,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEtB5C,mBAAU4C,GAFY,mBAEnDC,EAFmD,KAEvC9C,EAFuC,KAIxD,OACE,qCACA,+EACA,uBACA,cAAC,EAAD,CACEA,cAAgBA,IAKlB,6BAEI8C,EAAWpB,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MChBnB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b9b7c49.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n\n        console.log(inputValue);\n\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n\n        \n\n    }\n\n    return (\n\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","\n    export const getGifs = async( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Ltf944DkNPbJikk0TfL6V8IjpkbjSKn7`;\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        //console.log(gifs);\n        return gifs;\n    }","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GifGriditem = ( {title, url} ) => {\n    return (\n        <div className=\"card animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n\n\nGifGriditem.propTypes = {\n    title : PropTypes.string.isRequired,\n    url : PropTypes.string.isRequired\n};\n  \n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGriditem } from './GifGriditem';\nimport PropTypes from 'prop-types';\n\nexport const GifGrid = ( { category } ) => {\n\n    const { loading, data:images } = useFetchGifs( category );\n\n\n    return (\n        <>\n        <h3 className=\"animate__fadeIn animate__flash\">{ category }</h3>\n\n        { loading && <p className=\"animate__flash\">Loading...</p> }\n\n        <div className=\"card-grid\"> \n            {\n                images.map( img => (\n                    <GifGriditem \n                        title={ img.title }\n                        url={ img.url }\n                        key={img.id}\n                    /> \n                ))\n            }\n        </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category : PropTypes.string.isRequired,\n};","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/GetGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n         .then( imgs => {\n             setState({\n                 loading: false,\n                 data: imgs\n             });\n         });\n    }, [ category ])\n\n    return state;\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({ defaultCategories = [] }) => {\n\n  const [categories, setCategories] = useState( defaultCategories );\n\n    return(\n      <>\n      <h2>My GIPHY api example with React ðŸ¥° </h2>\n      <hr />\n      <AddCategory \n        setCategories={ setCategories }\n      />\n\n      {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n      <ol>\n        {\n          categories.map( category => (\n           <GifGrid \n             key={ category }\n             category={ category }\n           />\n          ))\n        }\n      </ol>\n\n\n      </>\n    )\n  } ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}